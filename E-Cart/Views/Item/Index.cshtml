@model E_Cart.ViewModel.ItemViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<style>
    #progress-wrp {
        border: 1px solid #0099CC;
        padding: 1px;
        position: relative;
        height: 30px;
        border-radius: 3px;
        margin: 10px;
        text-align: left;
        background: #fff;
        box-shadow: inset 1px 3px 6px rgba(0, 0, 0, 0.12);
    }

        #progress-wrp .progress-bar {
            height: 100%;
            border-radius: 3px;
            background-color: #f39ac7;
            width: 0;
            box-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.11);
        }

        #progress-wrp .status {
            top: 3px;
            left: 50%;
            position: absolute;
            display: inline-block;
            color: #000000;
        }
</style>

<form id="itemForm">

    <div class="container">
        <div class="col-md-4">
            <div class="form-group">
                Category
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.CategorySelectListItem, "Value", "Text"),
                        new { @class = "form-control" })
            </div>

        </div>


        <div class="col-md-4">
            <div class="form-group">
                Item Code:
                @Html.TextBoxFor(model => model.ItemCode, new { @class = "from-control", autocomplete = "off" })
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                Item Name:
                @Html.TextBoxFor(model => model.ItemName, new { @class = "from-control", autocomplete = "off" })
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                Description:
                @Html.TextBoxFor(model => model.Description, new { @class = "from-control", autocomplete = "off" })
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                Item Price:
                @Html.TextBoxFor(model => model.ItemPrice, new { @class = "from-control", autocomplete = "off" })
            </div>

        </div>
        <div class="col-md-4">
            <div class="form-group">
                Image :
                @Html.TextBoxFor(model => model.ImagePath, new { type = "file", @class = "from-control", autocomplete = "off" })
            </div>


        </div>

        <div>
            <input type="button" value="Save" name="save" class="btn btn-primary" id="btnSave" />
            &nbsp;
            <input type="button" value="Reset" name="reset" class="btn btn-danger" />

        </div>

    </div>
</form>

<div class="row">
    <div id="progress-wrp">
        <div class="progress-bar"></div>
        <div class="status">0%</div>
    </div>
</div>



@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnSave").on('click', function () {
                SaveItem();


            });

        });



        function ResetItem() {
            $("#CategoryId").val(" ");
            $("#ItemCode").val(" ");
            $("#ItemId").val(" ");
            $("#ItemName").val(" ");
            $("#Description").val(" ");
            $("#ItemPrice").val("");

            $("#ImagePath").val("");
        }

        function SaveItem() {
            var formData = new FormData();
            formData.append("CategoryId", $("#CategoryId").val());
            formData.append("ItemCode", $("#ItemCode").val());
            formData.append("ItemId", $("#ItemId").val());
            formData.append("ItemName", $("#ItemName").val());
            formData.append("Description", $("#Description").val());
            formData.append("ItemPrice", $("#ItemPrice").val());
            formData.append("ImagePath", $("#ImagePath").get(0).files[0]);

            //// var data = $("#itemFrm").serialize();

            //console.log(formData)


            $.ajax({
                type: 'POST',
                contentType: false,
                processData: false,
                url: '/Item/Index',
                data: formData,
                async: true,
                xhr: function () {
                    var myXhr = $.ajaxSettings.xhr();
                    if (myXhr.upload) {
                        myXhr.upload.addEventListener('progress', progressHandling, false);
                    }
                    return myXhr;
                },
                success: function (data) {

                    if (data.Success) {
                        alert(data.Message);
                        ResetItem();
                    }
                },
                error: function () {
                    alert("There is more problems to add Item.");
                }

            });

        }

        progressHandling = function (event) {
            var percent = 0;
            var position = event.loaded || event.position;
            var total = event.total;
            var progress_bar_id = "#progress-wrp";
            if (event.lengthComputable) {
                percent = Math.ceil(position / total * 100);
            }
            // update progressbars classes so it fits your code
            $(progress_bar_id + " .progress-bar").css("width", +percent + "%");
            $(progress_bar_id + " .status").text(percent + "%");
        };

            ////Change id to your id
            //$("#ImagePath").on("change", function (e) {
            //    var file = $(this)[0].files[0];
            //    var upload = new Upload(file);

            //    // maby check size or type here with upload.getSize() and upload.getType()

            //    // execute upload
            //    upload.doUpload();
            //});

    </script>
}






